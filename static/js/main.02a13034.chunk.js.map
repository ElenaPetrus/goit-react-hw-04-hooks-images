{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorMessage/ErrorMessage.js","services/apiService.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","toast","error","type","onChange","currentTarget","value","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onOpen","onClick","largeImageURL","src","webformatURL","alt","tags","ImageGallery","images","map","index","Loader","color","height","width","timeout","Button","onLoadMore","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","event","target","ErrorMessage","message","axios","defaults","baseURL","getPictures","page","get","then","resp","data","hits","App","setOfImages","setSetOfImages","setPage","bigImg","setBigImg","showModal","setShowModal","status","setStatus","setError","scrollTo","top","documentElement","scrollHeight","behavior","arr","length","catch","resetState","img","prevState","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02a13034.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handlChangeQuery = e => {\n    // console.log(e.currentTarget.value);\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Nothing for request! Please type the word');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={handlChangeQuery}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n","import React from 'react';\n\nfunction ImageGalleryItem({ image, onOpen }) {\n  // console.log(image);\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => onOpen(image.largeImageURL)}\n    >\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nexport { ImageGalleryItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onOpen }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <ImageGalleryItem image={image} key={index} onOpen={onOpen} />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      largeImageURL: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onOpen: PropTypes.func.isRequired,\n};\n\nexport { ImageGallery };\n","import NewLoader from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <NewLoader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={80}\n        width={80}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n\nexport { Loader };\n","import React from 'react';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <div className=\"containerButton\">\n      <button type=\"button\" className=\"button\" onClick={onLoadMore}>\n        load more\n      </button>\n    </div>\n  );\n}\n\nexport { Button };\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, src, alt }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  });\n\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      // console.log('Нажали ESC, нужно закрыть модалку');\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    // console.log('Кликнули в бекдроп');\n    // console.log('currentTarget: ', event.currentTarget);\n    // console.log('target: ', event.target);\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} width=\"1200px\" height=\"800px\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport { ErrorMessage };\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst API_KEY = '23028809-0eadab1d20ccc1cb386303aa3';\n\nexport function getPictures(query, page) {\n  return axios\n    .get(\n      `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`,\n    )\n    .then(resp => resp.data.hits);\n}\n","import { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { Loader } from './components/Loader/Loader';\nimport { Button } from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport { ErrorMessage } from './components/ErrorMessage/ErrorMessage';\nimport { getPictures } from './services/apiService';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [setOfImages, setSetOfImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [bigImg, setBigImg] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (page > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  });\n\n  const handleSearchbarSubmit = query => {\n    setQuery(query);\n    setStatus('pending');\n    setPage(1);\n    getPictures(query, 1)\n      .then(arr => {\n        if (arr.length < 1) {\n          return toast.error('Nothing was found.');\n        }\n        setSetOfImages(arr);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n    // .finally(() => Loading(false));\n  };\n\n  const resetState = () => {\n    setSetOfImages([]);\n    setPage(1);\n    setError(null);\n  };\n\n  const onLoadMore = () => {\n    getPictures(query, page + 1).then(img => {\n      setSetOfImages(prevState => [...prevState, ...img]);\n      setPage(page + 1);\n      setStatus('resolved');\n    });\n  };\n\n  const openModal = largeImageURL => {\n    setShowModal(true);\n    setBigImg(largeImageURL);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      <Searchbar\n        query={query}\n        onSubmit={handleSearchbarSubmit}\n        resetState={resetState}\n      />\n\n      <ImageGallery images={setOfImages} page={page} onOpen={openModal} />\n\n      {status === 'pending' && <Loader />}\n\n      {setOfImages.length > 0 && <Button onLoadMore={onLoadMore} />}\n      {showModal && (\n        <Modal\n          onClose={closeModal}\n          // onClose={this.toggleModal}\n          src={bigImg}\n          alt={query}\n        />\n      )}\n      <ToastContainer autoClose={2000} />\n      {status === 'rejected' && <ErrorMessage message={error} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}